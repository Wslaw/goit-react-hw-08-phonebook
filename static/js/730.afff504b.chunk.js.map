{"version":3,"file":"static/js/730.afff504b.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/SignUpForm/sign-up-form.module.css?db87","components/SignUpForm/SignUpForm.jsx","webpack://react-homework-template/./src/pages/SignUpPage/signup-page.module.css?d7e8","pages/SignUpPage/SignUpPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"sign-up-form_wrap__+TsqF\",\"block\":\"sign-up-form_block__z9Ay6\",\"btn\":\"sign-up-form_btn__1C8+w\",\"form\":\"sign-up-form_form__tlpwI\"};","import { useState,  useId } from 'react';\n\nimport styles from './sign-up-form.module.css';\n\nconst INITIAL_STATE = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst SignUpForm = ({ onSubmit }) => {\n  const [state, setState] = useState({ ...INITIAL_STATE });\n  const handleChange = ({ target }) => {\n\n    const { name, value, type, checked } = target;\n    const newValue = type === 'checkbox' ? checked : value;\n    // const { name, value } = target;\n    // const newValue =  value;\n\n    setState({\n      ...state,\n      [name]: newValue,\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    reset();\n  };\n\n  const reset = () => {\n    setState({ ...INITIAL_STATE });\n  };\n\n  const nameId = useId();\n  const emailId = useId();\n  const passwordId = useId();\n  const { name, email, password } = state;\n\n  return (\n    <div className={styles.wrap}>\n      <form className={styles.form} onSubmit={handleSubmit}>\n        <div className={styles.block}>\n          <label htmlFor={nameId}>Name:</label>\n          <input\n            id={nameId}\n            value={name}\n            onChange={handleChange}\n            name=\"name\"\n            required\n          />\n        </div>\n        <div className={styles.block}>\n          <label htmlFor={emailId}>Email:</label>\n          <input\n            id={emailId}\n            value={email}\n            onChange={handleChange}\n            type=\"email\"\n            name=\"email\"\n            required\n          />\n        </div>\n        <div className={styles.block}>\n          <label htmlFor={passwordId}>Password:</label>\n          <input\n            id={passwordId}\n            value={password}\n            onChange={handleChange}\n            type=\"password\"\n            name=\"password\"\n            required\n          />\n        </div>\n        <button className={styles.btn} type=\"submit\">\n          Sign Up\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default SignUpForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"signup-page_wrap__1QhJq\",\"block\":\"signup-page_block__BtqN3\",\"title\":\"signup-page_title__ydO+c\",\"text\":\"signup-page_text__45V-p\",\"error\":\"signup-page_error__as0DX\"};","import {useSelector, useDispatch } from 'react-redux';\n\nimport SignUpForm from '../../components/SignUpForm/SignUpForm';\n\nimport { signup } from '../../redux/auth/auth-operations';\nimport { selectAuthError,  selectAuthLoading} from '../../redux/auth/auth-selectors';\n// import Loader from 'components/Loader/Loader';\n// import { Navigate } from 'react-router-dom';\nimport styles from './signup-page.module.css';\n\nconst SignUpPage = () => {\n  const authLoading = useSelector(selectAuthLoading);\n  const authError = useSelector(selectAuthError);\n\n  const dispatch = useDispatch();\n  \n  const handleSignup = data => {\n    dispatch(signup(data))\n\n  }\n\n  return (\n    <div className={styles.wrap}>\n      <div className={styles.block}>\n        <h1 className={styles.title}>Registration page.</h1>\n        <p className={styles.text}>Please sign up.</p>\n        {authLoading && <p>.....Login in progress</p>}\n        <SignUpForm onSubmit={handleSignup} />\n        {authError && <p className={styles.error} style={{ color: 'red' }}>{authError}</p>}\n      </div>\n    </div>\n  );\n};\n\nexport default SignUpPage;\n"],"names":["INITIAL_STATE","name","email","password","_ref","onSubmit","_useState","useState","_objectSpread","_useState2","_slicedToArray","state","setState","handleChange","_ref2","target","value","type","checked","newValue","_defineProperty","reset","nameId","useId","emailId","passwordId","_jsx","className","styles","children","_jsxs","e","preventDefault","htmlFor","id","onChange","required","authLoading","useSelector","selectAuthLoading","authError","selectAuthError","dispatch","useDispatch","SignUpForm","data","signup","style","color"],"sourceRoot":""}