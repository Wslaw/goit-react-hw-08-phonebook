{"version":3,"file":"static/js/778.507f21be.chunk.js","mappings":"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","sources":["redux/contacts/contacts-selectors.js","webpack://react-homework-template/./src/components/Phonebook/ContactForm/contactForm.module.css?62c5","components/Phonebook/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Phonebook/ContactList/contactList.module.css?239b","components/Phonebook/ContactList/ContactList.jsx","components/Phonebook/Filter/filter-module.css","components/Phonebook/Filter/Filter.jsx","webpack://react-homework-template/./src/components/Phonebook/phonebook.module.css?5245","components/Phonebook/Phonebook.jsx"],"sourcesContent":["\n\nexport const selectAllContacts = store => store.contacts;\n\nexport const selectFilteredContacts = store => {\n  const { filter } = store;\n  const { items, isLoading, error } = store.contacts;\n  // console.log(store.contacts);\n  if (!filter) {\n     return { items, isLoading, error };\n  }\n  // console.log(filter);\n  const normalizedFilter = filter.toLowerCase();\n\n  const filteredContacts = items.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter)\n  );\n  return {\n    items: filteredContacts,\n    isLoading,\n    error,\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"contactForm_container__RH53j\",\"title\":\"contactForm_title__uaF4J\",\"formLabel\":\"contactForm_formLabel__IeaJI\",\"input\":\"contactForm_input__eRp3j\",\"wrapper\":\"contactForm_wrapper__JvnH+\",\"btn\":\"contactForm_btn__jdr+F\"};","import { selectAllContacts } from '../../../redux/contacts/contacts-selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styles from './contactForm.module.css';\nimport { nanoid } from '@reduxjs/toolkit';\nimport Notiflix from 'notiflix';\nimport { addContact } from '../../../redux/contacts/contacts-operations';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectAllContacts);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const nameInput = e.target.elements.name;\n    const numberInput = e.target.elements.number;\n\n    const normalizedName = nameInput.value.toLowerCase();\n\n    // console.log(contacts.items);\n    const isDuplicate = contacts.items.some(\n      contact => contact.name.toLowerCase() === normalizedName\n    );\n\n    if (isDuplicate) {\n      Notiflix.Notify.failure(\n        `${nameInput.value} is already in the phone book.`\n      );\n\n      e.target.reset();\n    } else {\n      dispatch(\n        addContact({\n          id: nanoid(),\n          name: nameInput.value,\n          phone: numberInput.value,\n        })\n      );\n      e.target.reset();\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit} className={styles.form}>\n        <div className={styles.wrapper}>\n          <label htmlFor=\"name\" className={styles.formLabel}>\n            Name\n          </label>\n          <input\n            id=\"name\"\n            className={styles.input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            placeholder=\"Enter your Name.\"\n          />\n          <label htmlFor=\"number\" className={styles.formLabel}>\n            Number\n          </label>\n          <input\n            id=\"number\"\n            className={styles.input}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"[0-9\\+\\-]*\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            placeholder=\"Enter your contact\"\n          />\n          <button type=\"submit\" className={styles.btn}>\n            Add Contact\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"contactList_container__fldVX\",\"title\":\"contactList_title__LOOxb\",\"formLabel\":\"contactList_formLabel__zvDVO\",\"input\":\"contactList_input__2yv91\",\"wrapper\":\"contactList_wrapper__cIaBf\",\"btn\":\"contactList_btn__ClvRs\",\"btnDelete\":\"contactList_btnDelete__1J-v-\",\"customList\":\"contactList_customList__dzAE6\",\"listWrapper\":\"contactList_listWrapper__yRgxm\"};","import React from 'react';\nimport { useEffect } from 'react';\nimport { deleteContact } from '../../../redux/contacts/contacts-operations';\nimport styles from './contactList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilteredContacts } from '../../../redux/contacts/contacts-selectors';\nimport { fetchContacts } from '../../../redux/contacts/contacts-operations';\nimport Loader from '../../Loader/Loader';\n\n\nconst ContactList = () => {\n  const { items, isLoading, error } = useSelector(selectFilteredContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleDeleteContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  if (!items || items.length === 0) {\n    return <p>No contacts found.</p>;\n  }\n\n  const elements = items.map(({ id, name, phone }) => (\n    <li key={id}>\n      {name}: {phone}\n      <button\n        onClick={() => handleDeleteContact(id)}\n        className={styles.btnDelete}\n        type=\"button\"\n      >\n        Delete\n      </button>\n    </li>\n  ));\n\n  return (\n    <div>\n      {error && <p>{error}</p>}\n      {isLoading && <Loader/>}\n      {Boolean(items.length) && (\n        <ol className={styles.customList}>{elements}</ol>\n      )}\n    </div>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {};","import { useDispatch } from 'react-redux';\nimport styles from '../Filter/filter-module.css';\nimport { setFilter } from '../../../redux/filter/filter-slice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const changeFilter = ({ target }) => {\n    dispatch(setFilter(target.value));\n  };\n\n  return (\n    <input\n      className={styles.input}\n      onChange={changeFilter}\n      name=\"filter\"\n      placeholder=\"Search\"\n      type=\"text\"\n    />\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"phonebook_wrapper__MfQ3k\",\"container\":\"phonebook_container__YmxXb\",\"title\":\"phonebook_title__wIGm2\",\"input\":\"phonebook_input__VJNdZ\",\"text\":\"phonebook_text__S15cN\"};","import ContactForm from './ContactForm/ContactForm';\nimport ContactList from './ContactList/ContactList';\nimport Filter from './Filter/Filter';\nimport winter from '../../images/winter.jpg';\nimport summer from '../../images/summer.jpg';\n\nimport styles from './phonebook.module.css';\n\n\nconst isWinterMonth = () => {\n  const currentDate = new Date();\n  const month = currentDate.getMonth() + 1;\n  return month === 12 || month === 1 || month === 2;\n};\n\n\nconst Phonebook = () => {\n\n\n  const isWinter = isWinterMonth();\n  const backgroundImage = isWinter ? winter : summer;\n\n  return (\n    <div\n      className={styles.body}\n      style={{ backgroundImage: `url(${backgroundImage})` }}\n    >\n      <div className={styles.container}>\n        <h1 className={styles.title}>Phonebook</h1>\n        <ContactForm />\n        <div>\n          <h2 className={styles.title}>Contacts</h2>\n          <p className={styles.text}>Find contacts by name</p>\n          <Filter />\n          <ContactList />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Phonebook;\n"],"names":["selectAllContacts","store","contacts","selectFilteredContacts","filter","_store$contacts","items","isLoading","error","normalizedFilter","toLowerCase","_ref","name","includes","dispatch","useDispatch","useSelector","_jsx","children","onSubmit","e","preventDefault","nameInput","target","elements","numberInput","number","normalizedName","value","some","contact","Notiflix","concat","reset","addContact","id","nanoid","phone","className","styles","_jsxs","htmlFor","type","pattern","title","required","placeholder","_useSelector","useEffect","fetchContacts","length","map","onClick","deleteContact","handleDeleteContact","Loader","Boolean","onChange","setFilter","backgroundImage","month","Date","getMonth","isWinterMonth","winter","summer","style","ContactForm","Filter","ContactList"],"sourceRoot":""}