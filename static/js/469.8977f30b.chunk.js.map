{"version":3,"file":"static/js/469.8977f30b.chunk.js","mappings":"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","sources":["redux/contacts/contacts-selectors.js","webpack://react-homework-template/./src/components/Phonebook/ContactForm/contactForm.module.css?62c5","components/Phonebook/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Phonebook/ContactList/contactList.module.css?239b","components/Phonebook/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Phonebook/Filter/filter.module.css?7d57","components/Phonebook/Filter/Filter.jsx","webpack://react-homework-template/./src/components/Phonebook/phonebook.module.css?5245","components/Phonebook/Phonebook.jsx"],"sourcesContent":["\n\nexport const selectAllContacts = store => store.contacts;\n\nexport const selectFilteredContacts = store => {\n  const { filter } = store;\n  const { items, isLoading, error } = store.contacts;\n  // console.log(store.contacts);\n  if (!filter) {\n     return { items, isLoading, error };\n  }\n  // console.log(filter);\n  const normalizedFilter = filter.toLowerCase();\n\n  const filteredContacts = items.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter)\n  );\n  return {\n    items: filteredContacts,\n    isLoading,\n    error,\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"contactForm_container__RH53j\",\"title\":\"contactForm_title__uaF4J\",\"formLabel\":\"contactForm_formLabel__IeaJI\",\"input\":\"contactForm_input__eRp3j\",\"wrapperNumber\":\"contactForm_wrapperNumber__i4exC\",\"wrapperName\":\"contactForm_wrapperName__OtQwd\",\"wrapper\":\"contactForm_wrapper__JvnH+\",\"btn\":\"contactForm_btn__jdr+F\"};","import { selectAllContacts } from '../../../redux/contacts/contacts-selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styles from './contactForm.module.css';\nimport { nanoid } from '@reduxjs/toolkit';\nimport Notiflix from 'notiflix';\nimport { addContact } from '../../../redux/contacts/contacts-operations';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectAllContacts);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const nameInput = e.target.elements.name;\n    const numberInput = e.target.elements.number;\n\n    const normalizedName = nameInput.value.toLowerCase();\n\n    // console.log(contacts.items);\n    const isDuplicate = contacts.items.some(\n      contact => contact.name.toLowerCase() === normalizedName\n    );\n\n    if (isDuplicate) {\n      Notiflix.Notify.failure(\n        `${nameInput.value} is already in the phone book.`\n      );\n\n      e.target.reset();\n    } else {\n      dispatch(\n        addContact({\n          id: nanoid(),\n          name: nameInput.value,\n          phone: numberInput.value,\n        })\n      );\n      e.target.reset();\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit} className={styles.form}>\n        <div className={styles.wrapper}>\n          <div className={styles.wrapperName}>\n            <label htmlFor=\"name\" className={styles.formLabel}>\n              Name\n            </label>\n            <input\n              id=\"name\"\n              className={styles.input}\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n              placeholder=\"Enter Name\"\n            />\n          </div>\n          <div className={styles.wrapperNumber}>\n            <label htmlFor=\"number\" className={styles.formLabel}>\n              Number\n            </label>\n            <input\n              id=\"number\"\n              className={styles.input}\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"[0-9\\+\\-]*\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n              placeholder=\"Enter contact\"\n            />\n          </div>\n          <button type=\"submit\" className={styles.btn}>\n            Add Contact\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"contactList_title__LOOxb\",\"formLabel\":\"contactList_formLabel__zvDVO\",\"input\":\"contactList_input__2yv91\",\"wrapper\":\"contactList_wrapper__cIaBf\",\"btn\":\"contactList_btn__ClvRs\",\"btnDelete\":\"contactList_btnDelete__1J-v-\",\"customList\":\"contactList_customList__dzAE6\",\"listWrapper\":\"contactList_listWrapper__yRgxm\",\"span\":\"contactList_span__erwLA\",\"name\":\"contactList_name__uvDMH\",\"phone\":\"contactList_phone__JJNTS\"};","import React from 'react';\nimport { useEffect } from 'react';\nimport { deleteContact } from '../../../redux/contacts/contacts-operations';\nimport styles from './contactList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilteredContacts } from '../../../redux/contacts/contacts-selectors';\nimport { fetchContacts } from '../../../redux/contacts/contacts-operations';\nimport Loader from '../../Loader/Loader';\nimport basket from '../../../images/basket.png'\n\n\nconst ContactList = () => {\n  const { items, isLoading, error } = useSelector(selectFilteredContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleDeleteContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  if (!items || items.length === 0) {\n    return <p>No contacts found.</p>;\n  }\n\n  const elements = items.map(({ id, name, phone }) => (\n    <li key={id}>\n      {/* {name}: {phone} */}\n      <div className={styles.span}>\n        <span className={styles.name}>{name}:</span>\n        <span className={styles.phone}>{phone}</span>\n      </div>\n      <button\n        onClick={() => handleDeleteContact(id)}\n        className={styles.btnDelete}\n        type=\"button\"\n      >\n        <img src={basket} alt=\"Delete\" width=\"12\" />\n      </button>\n    </li>\n  ));\n\n  return (\n    <div>\n      {error && <p>{error}</p>}\n      {isLoading && <Loader/>}\n      {Boolean(items.length) && (\n        <ol className={styles.customList}>{elements}</ol>\n      )}\n    </div>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"filter_input__vjfXX\"};","import { useDispatch } from 'react-redux';\nimport styles from '../Filter/filter.module.css';\nimport { setFilter } from '../../../redux/filter/filter-slice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const changeFilter = ({ target }) => {\n    dispatch(setFilter(target.value));\n  };\n\n  return (\n    <input\n      className={styles.input}\n      onChange={changeFilter}\n      name=\"filter\"\n      placeholder=\"Search\"\n      type=\"text\"\n    />\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper_book\":\"phonebook_wrapper_book__AI1U2\",\"wrapper_contacts\":\"phonebook_wrapper_contacts__e9lvQ\",\"container\":\"phonebook_container__YmxXb\",\"title\":\"phonebook_title__wIGm2\",\"titleText\":\"phonebook_titleText__l9uvF\",\"text\":\"phonebook_text__S15cN\"};","import ContactForm from './ContactForm/ContactForm';\nimport ContactList from './ContactList/ContactList';\nimport Filter from './Filter/Filter';\n// import winter from '../../images/winter.jpg';\n// import summer from '../../images/summer.jpg';\n\nimport styles from './phonebook.module.css';\n\n\n// const isWinterMonth = () => {\n//   const currentDate = new Date();\n//   const month = currentDate.getMonth() + 1;\n//   return month === 12 || month === 1 || month === 2;\n// };\n\n\nconst Phonebook = () => {\n\n\n  // const isWinter = isWinterMonth();\n  // const backgroundImage = isWinter ? winter : summer;\n\n  return (\n    <div\n      className={styles.body}\n      // style={{ backgroundImage: `url(${backgroundImage})` }}\n    >\n      <div className={styles.container}>\n        <div className={styles.wrapper_book}>\n          <h1 className={styles.title}>Phonebook</h1>\n          <ContactForm />\n          <p className={styles.text}>Find contacts by name</p>\n\n          <Filter />\n        </div>\n        <div className={styles.wrapper_contacts}>\n          <h2 className={styles.titleText}>Your contacts:</h2>\n\n          <ContactList />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Phonebook;\n"],"names":["selectAllContacts","store","contacts","selectFilteredContacts","filter","_store$contacts","items","isLoading","error","normalizedFilter","toLowerCase","_ref","name","includes","dispatch","useDispatch","useSelector","_jsx","children","onSubmit","e","preventDefault","nameInput","target","elements","numberInput","number","normalizedName","value","some","contact","Notiflix","concat","reset","addContact","id","nanoid","phone","className","styles","_jsxs","htmlFor","type","pattern","title","required","placeholder","_useSelector","useEffect","fetchContacts","length","map","onClick","deleteContact","handleDeleteContact","src","alt","width","Loader","Boolean","onChange","setFilter","ContactForm","Filter","ContactList"],"sourceRoot":""}